
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea0000a6 	b	82a0 <main>

Disassembly of section .text:

00008004 <GetMailboxBase>:
    8004:	e59f006c 	ldr	r0, [pc, #108]	; 8078 <wait2$+0x24>
    8008:	e1a0f00e 	mov	pc, lr

0000800c <MailboxWrite>:
    800c:	e310000f 	tst	r0, #15
    8010:	11a0f00e 	movne	pc, lr
    8014:	e351000f 	cmp	r1, #15
    8018:	81a0f00e 	movhi	pc, lr
    801c:	e1a02000 	mov	r2, r0
    8020:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8024:	ebfffff6 	bl	8004 <GetMailboxBase>
    8028:	e0822001 	add	r2, r2, r1

0000802c <wait1$>:
    802c:	e5903018 	ldr	r3, [r0, #24]
    8030:	e3130102 	tst	r3, #-2147483648	; 0x80000000
    8034:	1afffffc 	bne	802c <wait1$>
    8038:	e5802020 	str	r2, [r0, #32]
    803c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00008040 <MailboxRead>:
    8040:	e350000f 	cmp	r0, #15
    8044:	81a0f00e 	movhi	pc, lr
    8048:	e1a01000 	mov	r1, r0
    804c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8050:	ebffffeb 	bl	8004 <GetMailboxBase>

00008054 <wait2$>:
    8054:	e5902018 	ldr	r2, [r0, #24]
    8058:	e3120101 	tst	r2, #1073741824	; 0x40000000
    805c:	1afffffc 	bne	8054 <wait2$>
    8060:	e5902000 	ldr	r2, [r0]
    8064:	e202300f 	and	r3, r2, #15
    8068:	e1330001 	teq	r3, r1
    806c:	1afffff8 	bne	8054 <wait2$>
    8070:	e3c2000f 	bic	r0, r2, #15
    8074:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    8078:	2000b880 	.word	0x2000b880

0000807c <InitialiseFrameBuffer>:
    807c:	e3500a01 	cmp	r0, #4096	; 0x1000
    8080:	93510a01 	cmpls	r1, #4096	; 0x1000
    8084:	93520020 	cmpls	r2, #32
    8088:	83a00000 	movhi	r0, #0
    808c:	81a0f00e 	movhi	pc, lr
    8090:	e59f4040 	ldr	r4, [pc, #64]	; 80d8 <InitialiseFrameBuffer+0x5c>
    8094:	e5840000 	str	r0, [r4]
    8098:	e5841004 	str	r1, [r4, #4]
    809c:	e5840008 	str	r0, [r4, #8]
    80a0:	e584100c 	str	r1, [r4, #12]
    80a4:	e5842014 	str	r2, [r4, #20]
    80a8:	e1a00004 	mov	r0, r4
    80ac:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
    80b0:	e3a01001 	mov	r1, #1
    80b4:	e92d4010 	push	{r4, lr}
    80b8:	ebffffd3 	bl	800c <MailboxWrite>
    80bc:	e3a00001 	mov	r0, #1
    80c0:	ebffffde 	bl	8040 <MailboxRead>
    80c4:	e3300000 	teq	r0, #0
    80c8:	13a00000 	movne	r0, #0
    80cc:	18bd8010 	popne	{r4, pc}
    80d0:	e1a00004 	mov	r0, r4
    80d4:	e8bd8010 	pop	{r4, pc}
    80d8:	00008340 	.word	0x00008340

000080dc <GetSystemTimerAddress>:
    80dc:	e59f0034 	ldr	r0, [pc, #52]	; 8118 <loop$+0x14>
    80e0:	e1a0f00e 	mov	pc, lr

000080e4 <GetTimeStamp>:
    80e4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    80e8:	ebfffffb 	bl	80dc <GetSystemTimerAddress>
    80ec:	e1c000d4 	ldrd	r0, [r0, #4]
    80f0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000080f4 <Wait>:
    80f4:	e1a02000 	mov	r2, r0
    80f8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    80fc:	ebfffff8 	bl	80e4 <GetTimeStamp>
    8100:	e1a03000 	mov	r3, r0

00008104 <loop$>:
    8104:	ebfffff6 	bl	80e4 <GetTimeStamp>
    8108:	e0401003 	sub	r1, r0, r3
    810c:	e1510002 	cmp	r1, r2
    8110:	9afffffb 	bls	8104 <loop$>
    8114:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    8118:	20003000 	.word	0x20003000

0000811c <SetForegroundColour>:
    811c:	e3500801 	cmp	r0, #65536	; 0x10000
    8120:	21a0f00e 	movcs	pc, lr
    8124:	e59f10d4 	ldr	r1, [pc, #212]	; 8200 <drawPixels+0x34>
    8128:	e1c100b0 	strh	r0, [r1]
    812c:	e1a0f00e 	mov	pc, lr

00008130 <SetGraphicsAddress>:
    8130:	e59f10cc 	ldr	r1, [pc, #204]	; 8204 <drawPixels+0x38>
    8134:	e5810000 	str	r0, [r1]
    8138:	e1a0f00e 	mov	pc, lr

0000813c <DrawPixel>:
    813c:	e59f20c0 	ldr	r2, [pc, #192]	; 8204 <drawPixels+0x38>
    8140:	e5922000 	ldr	r2, [r2]
    8144:	e5923004 	ldr	r3, [r2, #4]
    8148:	e2433001 	sub	r3, r3, #1
    814c:	e1510003 	cmp	r1, r3
    8150:	81a0f00e 	movhi	pc, lr
    8154:	e5923000 	ldr	r3, [r2]
    8158:	e2433001 	sub	r3, r3, #1
    815c:	e1500003 	cmp	r0, r3
    8160:	81a0f00e 	movhi	pc, lr
    8164:	e2833001 	add	r3, r3, #1
    8168:	e5922020 	ldr	r2, [r2, #32]
    816c:	e0200391 	mla	r0, r1, r3, r0
    8170:	e0822080 	add	r2, r2, r0, lsl #1
    8174:	e59f3084 	ldr	r3, [pc, #132]	; 8200 <drawPixels+0x34>
    8178:	e1d330b0 	ldrh	r3, [r3]
    817c:	e1c230b0 	strh	r3, [r2]
    8180:	e1a0f00e 	mov	pc, lr

00008184 <DrawLine>:
    8184:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    8188:	e1a04000 	mov	r4, r0
    818c:	e1a05001 	mov	r5, r1
    8190:	e1a06002 	mov	r6, r2
    8194:	e1a07003 	mov	r7, r3
    8198:	e1540006 	cmp	r4, r6
    819c:	c0448006 	subgt	r8, r4, r6
    81a0:	c3e0a000 	mvngt	sl, #0
    81a4:	d0468004 	suble	r8, r6, r4
    81a8:	d3a0a001 	movle	sl, #1
    81ac:	e1550007 	cmp	r5, r7
    81b0:	c0479005 	subgt	r9, r7, r5
    81b4:	c3e0b000 	mvngt	fp, #0
    81b8:	d0459007 	suble	r9, r5, r7
    81bc:	d3a0b001 	movle	fp, #1
    81c0:	e088c009 	add	ip, r8, r9
    81c4:	e086600a 	add	r6, r6, sl
    81c8:	e087700b 	add	r7, r7, fp

000081cc <drawPixels>:
    81cc:	e1340006 	teq	r4, r6
    81d0:	11350007 	teqne	r5, r7
    81d4:	08bd9ff0 	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
    81d8:	e1a00004 	mov	r0, r4
    81dc:	e1a01005 	mov	r1, r5
    81e0:	ebffffd5 	bl	813c <DrawPixel>
    81e4:	e159008c 	cmp	r9, ip, lsl #1
    81e8:	d08cc009 	addle	ip, ip, r9
    81ec:	d084400a 	addle	r4, r4, sl
    81f0:	e158008c 	cmp	r8, ip, lsl #1
    81f4:	a08cc008 	addge	ip, ip, r8
    81f8:	a085500b 	addge	r5, r5, fp
    81fc:	eafffff2 	b	81cc <drawPixels>
    8200:	00008368 	.word	0x00008368
    8204:	0000836c 	.word	0x0000836c

00008208 <GetGpioBase>:
    8208:	e59f008c 	ldr	r0, [pc, #140]	; 829c <SetGpio+0x3c>
    820c:	e1a0f00e 	mov	pc, lr

00008210 <SetGpioFunction>:
    8210:	e3500035 	cmp	r0, #53	; 0x35
    8214:	93510007 	cmpls	r1, #7
    8218:	81a0f00e 	movhi	pc, lr
    821c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8220:	e1a02000 	mov	r2, r0
    8224:	ebfffff7 	bl	8208 <GetGpioBase>

00008228 <functionLoop$>:
    8228:	e3520009 	cmp	r2, #9
    822c:	8242200a 	subhi	r2, r2, #10
    8230:	82800004 	addhi	r0, r0, #4
    8234:	8afffffb 	bhi	8228 <functionLoop$>
    8238:	e0822082 	add	r2, r2, r2, lsl #1
    823c:	e1a01211 	lsl	r1, r1, r2
    8240:	e3a03007 	mov	r3, #7
    8244:	e1a03213 	lsl	r3, r3, r2
    8248:	e1e03003 	mvn	r3, r3
    824c:	e5902000 	ldr	r2, [r0]
    8250:	e0022003 	and	r2, r2, r3
    8254:	e1811002 	orr	r1, r1, r2
    8258:	e5801000 	str	r1, [r0]
    825c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00008260 <SetGpio>:
    8260:	e3500035 	cmp	r0, #53	; 0x35
    8264:	81a0f00e 	movhi	pc, lr
    8268:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    826c:	e1a02000 	mov	r2, r0
    8270:	ebffffe4 	bl	8208 <GetGpioBase>
    8274:	e1a032a2 	lsr	r3, r2, #5
    8278:	e1a03103 	lsl	r3, r3, #2
    827c:	e0800003 	add	r0, r0, r3
    8280:	e202201f 	and	r2, r2, #31
    8284:	e3a03001 	mov	r3, #1
    8288:	e1a03213 	lsl	r3, r3, r2
    828c:	e3310000 	teq	r1, #0
    8290:	05803028 	streq	r3, [r0, #40]	; 0x28
    8294:	1580301c 	strne	r3, [r0, #28]
    8298:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    829c:	20200000 	.word	0x20200000

000082a0 <main>:
    82a0:	e3a0d902 	mov	sp, #32768	; 0x8000
    82a4:	e3a00b01 	mov	r0, #1024	; 0x400
    82a8:	e3a01c03 	mov	r1, #768	; 0x300
    82ac:	e3a02010 	mov	r2, #16
    82b0:	ebffff71 	bl	807c <InitialiseFrameBuffer>
    82b4:	e3300000 	teq	r0, #0
    82b8:	1a000006 	bne	82d8 <noError$>
    82bc:	e3a00010 	mov	r0, #16
    82c0:	e3a01001 	mov	r1, #1
    82c4:	ebffffd1 	bl	8210 <SetGpioFunction>
    82c8:	e3a00010 	mov	r0, #16
    82cc:	e3a01000 	mov	r1, #0
    82d0:	ebffffe2 	bl	8260 <SetGpio>

000082d4 <error$>:
    82d4:	eafffffe 	b	82d4 <error$>

000082d8 <noError$>:
    82d8:	e1a04000 	mov	r4, r0
    82dc:	ebffff93 	bl	8130 <SetGraphicsAddress>
    82e0:	e3a0000a 	mov	r0, #10
    82e4:	e3a01000 	mov	r1, #0
    82e8:	ebffff93 	bl	813c <DrawPixel>
    82ec:	e3a00014 	mov	r0, #20
    82f0:	e3a01000 	mov	r1, #0
    82f4:	ebffff90 	bl	813c <DrawPixel>
    82f8:	e3a0000a 	mov	r0, #10
    82fc:	e3a0100a 	mov	r1, #10
    8300:	ebffff8d 	bl	813c <DrawPixel>
    8304:	e3a00014 	mov	r0, #20
    8308:	e3a0100a 	mov	r1, #10
    830c:	ebffff8a 	bl	813c <DrawPixel>
    8310:	e3a00000 	mov	r0, #0
    8314:	e3a01000 	mov	r1, #0
    8318:	e3a020c8 	mov	r2, #200	; 0xc8
    831c:	e3a03e19 	mov	r3, #400	; 0x190
    8320:	ebffff97 	bl	8184 <DrawLine>
    8324:	e3a000c8 	mov	r0, #200	; 0xc8
    8328:	e3a01e19 	mov	r1, #400	; 0x190
    832c:	e3a020c8 	mov	r2, #200	; 0xc8
    8330:	e3a03000 	mov	r3, #0
    8334:	ebffff92 	bl	8184 <DrawLine>

00008338 <loop$>:
    8338:	eafffffe 	b	8338 <loop$>
