
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea000087 	b	8224 <main>

Disassembly of section .text:

00008004 <GetMailboxBase>:
    8004:	e59f006c 	ldr	r0, [pc, #108]	; 8078 <wait2$+0x24>
    8008:	e1a0f00e 	mov	pc, lr

0000800c <MailboxWrite>:
    800c:	e310000f 	tst	r0, #15
    8010:	11a0f00e 	movne	pc, lr
    8014:	e351000f 	cmp	r1, #15
    8018:	81a0f00e 	movhi	pc, lr
    801c:	e1a02000 	mov	r2, r0
    8020:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8024:	ebfffff6 	bl	8004 <GetMailboxBase>
    8028:	e0822001 	add	r2, r2, r1

0000802c <wait1$>:
    802c:	e5903018 	ldr	r3, [r0, #24]
    8030:	e3130102 	tst	r3, #-2147483648	; 0x80000000
    8034:	1afffffc 	bne	802c <wait1$>
    8038:	e5802020 	str	r2, [r0, #32]
    803c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00008040 <MailboxRead>:
    8040:	e350000f 	cmp	r0, #15
    8044:	81a0f00e 	movhi	pc, lr
    8048:	e1a01000 	mov	r1, r0
    804c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    8050:	ebffffeb 	bl	8004 <GetMailboxBase>

00008054 <wait2$>:
    8054:	e5902018 	ldr	r2, [r0, #24]
    8058:	e3120101 	tst	r2, #1073741824	; 0x40000000
    805c:	1afffffc 	bne	8054 <wait2$>
    8060:	e5902000 	ldr	r2, [r0]
    8064:	e202300f 	and	r3, r2, #15
    8068:	e1330001 	teq	r3, r1
    806c:	1afffff8 	bne	8054 <wait2$>
    8070:	e3c2000f 	bic	r0, r2, #15
    8074:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    8078:	2000b880 	.word	0x2000b880

0000807c <InitialiseFrameBuffer>:
    807c:	e3500a01 	cmp	r0, #4096	; 0x1000
    8080:	93510a01 	cmpls	r1, #4096	; 0x1000
    8084:	93520020 	cmpls	r2, #32
    8088:	83a00000 	movhi	r0, #0
    808c:	81a0f00e 	movhi	pc, lr
    8090:	e59f4040 	ldr	r4, [pc, #64]	; 80d8 <InitialiseFrameBuffer+0x5c>
    8094:	e5840000 	str	r0, [r4]
    8098:	e5841004 	str	r1, [r4, #4]
    809c:	e5840008 	str	r0, [r4, #8]
    80a0:	e584100c 	str	r1, [r4, #12]
    80a4:	e5842014 	str	r2, [r4, #20]
    80a8:	e1a00004 	mov	r0, r4
    80ac:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
    80b0:	e3a01001 	mov	r1, #1
    80b4:	e92d4010 	push	{r4, lr}
    80b8:	ebffffd3 	bl	800c <MailboxWrite>
    80bc:	e3a00001 	mov	r0, #1
    80c0:	ebffffde 	bl	8040 <MailboxRead>
    80c4:	e3300000 	teq	r0, #0
    80c8:	13a00000 	movne	r0, #0
    80cc:	18bd8010 	popne	{r4, pc}
    80d0:	e1a00004 	mov	r0, r4
    80d4:	e8bd8010 	pop	{r4, pc}
    80d8:	000082c0 	.word	0x000082c0

000080dc <GetSystemTimerAddress>:
    80dc:	e59f0034 	ldr	r0, [pc, #52]	; 8118 <loop$+0x14>
    80e0:	e1a0f00e 	mov	pc, lr

000080e4 <GetTimeStamp>:
    80e4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    80e8:	ebfffffb 	bl	80dc <GetSystemTimerAddress>
    80ec:	e1c000d4 	ldrd	r0, [r0, #4]
    80f0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000080f4 <Wait>:
    80f4:	e1a02000 	mov	r2, r0
    80f8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    80fc:	ebfffff8 	bl	80e4 <GetTimeStamp>
    8100:	e1a03000 	mov	r3, r0

00008104 <loop$>:
    8104:	ebfffff6 	bl	80e4 <GetTimeStamp>
    8108:	e0401003 	sub	r1, r0, r3
    810c:	e1510002 	cmp	r1, r2
    8110:	9afffffb 	bls	8104 <loop$>
    8114:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    8118:	20003000 	.word	0x20003000

0000811c <SetForegroundColour>:
    811c:	e3500801 	cmp	r0, #65536	; 0x10000
    8120:	21a0f00e 	movcs	pc, lr
    8124:	e59f1058 	ldr	r1, [pc, #88]	; 8184 <SetPixel+0x48>
    8128:	e1c100b0 	strh	r0, [r1]
    812c:	e1a0f00e 	mov	pc, lr

00008130 <SetGraphicsAddress>:
    8130:	e59f1050 	ldr	r1, [pc, #80]	; 8188 <SetPixel+0x4c>
    8134:	e5810000 	str	r0, [r1]
    8138:	e1a0f00e 	mov	pc, lr

0000813c <SetPixel>:
    813c:	e59f2044 	ldr	r2, [pc, #68]	; 8188 <SetPixel+0x4c>
    8140:	e5922000 	ldr	r2, [r2]
    8144:	e5923004 	ldr	r3, [r2, #4]
    8148:	e2433001 	sub	r3, r3, #1
    814c:	e1510003 	cmp	r1, r3
    8150:	81a0f00e 	movhi	pc, lr
    8154:	e5923000 	ldr	r3, [r2]
    8158:	e2433001 	sub	r3, r3, #1
    815c:	e1500003 	cmp	r0, r3
    8160:	81a0f00e 	movhi	pc, lr
    8164:	e2833001 	add	r3, r3, #1
    8168:	e5922020 	ldr	r2, [r2, #32]
    816c:	e0200391 	mla	r0, r1, r3, r0
    8170:	e0822080 	add	r2, r2, r0, lsl #1
    8174:	e59f3008 	ldr	r3, [pc, #8]	; 8184 <SetPixel+0x48>
    8178:	e1d330b0 	ldrh	r3, [r3]
    817c:	e1c230b0 	strh	r3, [r2]
    8180:	e1a0f00e 	mov	pc, lr
    8184:	000082e8 	.word	0x000082e8
    8188:	000082ec 	.word	0x000082ec

0000818c <GetGpioBase>:
    818c:	e59f008c 	ldr	r0, [pc, #140]	; 8220 <SetGpio+0x3c>
    8190:	e1a0f00e 	mov	pc, lr

00008194 <SetGpioFunction>:
    8194:	e3500035 	cmp	r0, #53	; 0x35
    8198:	93510007 	cmpls	r1, #7
    819c:	81a0f00e 	movhi	pc, lr
    81a0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    81a4:	e1a02000 	mov	r2, r0
    81a8:	ebfffff7 	bl	818c <GetGpioBase>

000081ac <functionLoop$>:
    81ac:	e3520009 	cmp	r2, #9
    81b0:	8242200a 	subhi	r2, r2, #10
    81b4:	82800004 	addhi	r0, r0, #4
    81b8:	8afffffb 	bhi	81ac <functionLoop$>
    81bc:	e0822082 	add	r2, r2, r2, lsl #1
    81c0:	e1a01211 	lsl	r1, r1, r2
    81c4:	e3a03007 	mov	r3, #7
    81c8:	e1a03213 	lsl	r3, r3, r2
    81cc:	e1e03003 	mvn	r3, r3
    81d0:	e5902000 	ldr	r2, [r0]
    81d4:	e0022003 	and	r2, r2, r3
    81d8:	e1811002 	orr	r1, r1, r2
    81dc:	e5801000 	str	r1, [r0]
    81e0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000081e4 <SetGpio>:
    81e4:	e3500035 	cmp	r0, #53	; 0x35
    81e8:	81a0f00e 	movhi	pc, lr
    81ec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    81f0:	e1a02000 	mov	r2, r0
    81f4:	ebffffe4 	bl	818c <GetGpioBase>
    81f8:	e1a032a2 	lsr	r3, r2, #5
    81fc:	e1a03103 	lsl	r3, r3, #2
    8200:	e0800003 	add	r0, r0, r3
    8204:	e202201f 	and	r2, r2, #31
    8208:	e3a03001 	mov	r3, #1
    820c:	e1a03213 	lsl	r3, r3, r2
    8210:	e3310000 	teq	r1, #0
    8214:	05803028 	streq	r3, [r0, #40]	; 0x28
    8218:	1580301c 	strne	r3, [r0, #28]
    821c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    8220:	20200000 	.word	0x20200000

00008224 <main>:
    8224:	e3a0d902 	mov	sp, #32768	; 0x8000
    8228:	e3a00b01 	mov	r0, #1024	; 0x400
    822c:	e3a01c03 	mov	r1, #768	; 0x300
    8230:	e3a02010 	mov	r2, #16
    8234:	ebffff90 	bl	807c <InitialiseFrameBuffer>
    8238:	e3300000 	teq	r0, #0
    823c:	1a000006 	bne	825c <noError$>
    8240:	e3a00010 	mov	r0, #16
    8244:	e3a01001 	mov	r1, #1
    8248:	ebffffd1 	bl	8194 <SetGpioFunction>
    824c:	e3a00010 	mov	r0, #16
    8250:	e3a01000 	mov	r1, #0
    8254:	ebffffe2 	bl	81e4 <SetGpio>

00008258 <error$>:
    8258:	eafffffe 	b	8258 <error$>

0000825c <noError$>:
    825c:	e1a04000 	mov	r4, r0
    8260:	ebffffb2 	bl	8130 <SetGraphicsAddress>
    8264:	e3a00001 	mov	r0, #1
    8268:	e3a01000 	mov	r1, #0
    826c:	ebffffb2 	bl	813c <SetPixel>
    8270:	e3a00003 	mov	r0, #3
    8274:	e3a01000 	mov	r1, #0
    8278:	ebffffaf 	bl	813c <SetPixel>
    827c:	e3a00000 	mov	r0, #0
    8280:	e3a01002 	mov	r1, #2
    8284:	ebffffac 	bl	813c <SetPixel>
    8288:	e3a00004 	mov	r0, #4
    828c:	e3a01002 	mov	r1, #2
    8290:	ebffffa9 	bl	813c <SetPixel>
    8294:	e3a00001 	mov	r0, #1
    8298:	e3a01003 	mov	r1, #3
    829c:	ebffffa6 	bl	813c <SetPixel>
    82a0:	e3a00002 	mov	r0, #2
    82a4:	e3a01003 	mov	r1, #3
    82a8:	ebffffa3 	bl	813c <SetPixel>
    82ac:	e3a00003 	mov	r0, #3
    82b0:	e3a01003 	mov	r1, #3
    82b4:	ebffffa0 	bl	813c <SetPixel>

000082b8 <loop$>:
    82b8:	eafffffe 	b	82b8 <loop$>
